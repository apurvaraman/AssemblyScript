{"version":3,"sources":["lib/prelude-loader.js","index.js"],"names":["prelude","modules","cache","entry","newRequire","name","jumped","currentRequire","require","previousRequire","err","Error","code","m","exports","call","x","id","module","long","define","amd","undefined","g","global","window","this","dcodeIO","Long","assemblyscriptLoader","1","load","file","options","get_long_s","ptr","unsigned","lo","buffer","hi","fromBits","low","high","set_long_s","value","onGrowMemory","Uint8Array","memory","imports","currentMemory","byteLength","growMemory","additionalPages","previousPages","grow","byte","u8","get","set","sbyte","s8","short","s16","ushort","u16","int","s32","uint","u32","s64","ulong","u64","f64","Float64Array","f32","Float32Array","f8b","fle","float","double","array","capacity","length","base","arrayHeaderSize","create","elementByteSize","malloc","env","string","chars","Array","i","String","fromCharCode","apply","charCodeAt","fetch","fetch_node","then","result","arrayBuffer","WebAssembly","instantiate","instance","Promise","resolve","reject","fs","eval","replace","readFile","data","Object","defineProperty","default","e"],"mappings":"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","file":"assemblyscript-loader.js","sourcesContent":[";(function prelude(modules, cache, entry) {\r\n  var previousRequire = typeof require == \"function\" && require;\r\n\r\n  function newRequire(name, jumped) {\r\n    if (!cache[name]) {\r\n      if (!modules[name]) {\r\n        var currentRequire = typeof require == \"function\" && require;\r\n        if (!jumped && currentRequire) return currentRequire(name, true);\r\n        if (previousRequire) return previousRequire(name, true);\r\n        var err = new Error('Cannot find module \\'' + name + '\\'');\r\n        err.code = 'MODULE_NOT_FOUND';\r\n        throw err;\r\n      }\r\n      var m = cache[name] = { exports: {} };\r\n      modules[name][0].call(m.exports, function (x) {\r\n        var id = modules[name][1][x];\r\n        return newRequire(id ? id : x);\r\n      }, m, m.exports, prelude, modules, cache, entry);\r\n    }\r\n    return cache[name].exports;\r\n  }\r\n\r\n  // Be nice to CommonJS\r\n  if (typeof module !== \"undefined\" && module && module.exports) {\r\n    cache.long = { exports: previousRequire(\"long\") };\r\n    module.exports = newRequire(entry[0]);\r\n\r\n  // Be nice to AMD\r\n  } else if (typeof define === \"function\" && define.amd) {\r\n    define([\"long\"], function(long) {\r\n      cache.long = { exports: long || undefined };\r\n      return newRequire(entry[0]);\r\n    });\r\n\r\n  // Otherwise expose globally\r\n  } else {\r\n    var g = typeof global !== \"undefined\" && global\r\n         || typeof window !== \"undefined\" && window\r\n         || this;\r\n    if (g.dcodeIO && g.dcodeIO.Long) cache.long = { exports: g.dcodeIO.Long };\r\n    g.assemblyscriptLoader = newRequire(entry[0]);\r\n  }\r\n\r\n  return newRequire;\r\n})","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.load = exports.default = load;\r\n\r\nvar Long; try { Long = require(\"long\"); } catch (e) { /**/ }\r\nif (typeof Long !== \"function\") Long = undefined; // might have been excluded\r\n\r\nvar arrayHeaderSize = 8; // capacity and length\r\n\r\nfunction load(file, options) {\r\n  if (!options) options = {};\r\n\r\n  var imports = options.imports || {};\r\n  if (options.memory)\r\n    imports.memory = options.memory;\r\n  var buffer;\r\n\r\n  var module = {\r\n    memory: options.memory || null,\r\n    imports: imports,\r\n    exports: {},\r\n    currentMemory: function currentMemory() {\r\n      return this.memory.buffer.byteLength >>> 16;\r\n    },\r\n    growMemory: function growMemory(additionalPages) {\r\n      var previousPages = this.memory.grow(additionalPages);\r\n      onGrowMemory();\r\n      return previousPages;\r\n    }\r\n  };\r\n\r\n  module.byte = module.u8 = {\r\n    get: function get_byte(ptr) {\r\n      return buffer[ptr];\r\n    },\r\n    set: function set_byte(ptr, value) {\r\n      buffer[ptr] = value;\r\n    }\r\n  };\r\n\r\n  module.sbyte = module.s8 = {\r\n    get: function get_sbyte(ptr) {\r\n      return buffer[ptr] << 24 >> 24;\r\n    },\r\n    set: function set_sbyte(ptr, value) {\r\n      buffer[ptr] = value;\r\n    }\r\n  };\r\n\r\n  module.short = module.s16 = {\r\n    get: function get_short(ptr) {\r\n      return (buffer[ptr    ]\r\n            | buffer[ptr + 1] << 8) << 16 >> 16;\r\n    },\r\n    set: function set_short(ptr, value) {\r\n      buffer[ptr    ] = value       & 255;\r\n      buffer[ptr + 1] = value >>> 8 & 255;\r\n    }\r\n  };\r\n\r\n  module.ushort = module.u16 = {\r\n    get: function get_ushort(ptr) {\r\n      return buffer[ptr    ]\r\n           | buffer[ptr + 1] << 8;\r\n    },\r\n    set: function set_ushort(ptr, value) {\r\n      buffer[ptr    ] = value       & 255;\r\n      buffer[ptr + 1] = value >>> 8 & 255;\r\n    }\r\n  };\r\n\r\n  module.int = module.s32 = {\r\n    get: function get_int(ptr) {\r\n      return buffer[ptr    ]\r\n           | buffer[ptr + 1] << 8\r\n           | buffer[ptr + 2] << 16\r\n           | buffer[ptr + 3] << 24;\r\n    },\r\n    set: function set_int(ptr, value) {\r\n      buffer[ptr    ] = value        & 255;\r\n      buffer[ptr + 1] = value >>> 8  & 255;\r\n      buffer[ptr + 2] = value >>> 16 & 255;\r\n      buffer[ptr + 3] = value >>> 24;\r\n    }\r\n  };\r\n\r\n  module.uint = module.u32 = {\r\n    get: function get_uint(ptr) {\r\n      return (buffer[ptr    ]\r\n            | buffer[ptr + 1] << 8\r\n            | buffer[ptr + 2] << 16\r\n            | buffer[ptr + 3] << 24) >>> 0;\r\n    },\r\n    set: function set_uint(ptr, value) {\r\n      buffer[ptr    ] = value        & 255;\r\n      buffer[ptr + 1] = value >>> 8  & 255;\r\n      buffer[ptr + 2] = value >>> 16 & 255;\r\n      buffer[ptr + 3] = value >>> 24;\r\n    }\r\n  };\r\n\r\n  function get_long_s(ptr, unsigned) {\r\n    var lo = buffer[ptr    ]\r\n           | buffer[ptr + 1] << 8\r\n           | buffer[ptr + 2] << 16\r\n           | buffer[ptr + 3] << 24;\r\n    var hi = buffer[ptr + 4]\r\n           | buffer[ptr + 5] << 8\r\n           | buffer[ptr + 6] << 16\r\n           | buffer[ptr + 7] << 24;\r\n    return Long\r\n      ? Long.fromBits(lo, hi, !!unsigned)\r\n      : { low: lo, high: hi, unsigned: !!unsigned };\r\n  }\r\n\r\n  function set_long_s(ptr, value) {\r\n    buffer[ptr    ] = value.low         & 255;\r\n    buffer[ptr + 1] = value.low  >>> 8  & 255;\r\n    buffer[ptr + 2] = value.low  >>> 16 & 255;\r\n    buffer[ptr + 3] = value.low  >>> 24;\r\n    buffer[ptr + 4] = value.high        & 255;\r\n    buffer[ptr + 5] = value.high >>> 8  & 255;\r\n    buffer[ptr + 6] = value.high >>> 16 & 255;\r\n    buffer[ptr + 7] = value.high >>> 24;\r\n  }\r\n\r\n  module.long = module.s64 = {\r\n    get: function get_long(ptr) { return get_long_s(ptr, false); },\r\n    set: set_long_s\r\n  };\r\n\r\n  module.ulong = module.u64 = {\r\n    get: function get_ulong(ptr) { return get_long_s(ptr, true); },\r\n    set: set_long_s\r\n  };\r\n\r\n  var f64 = new Float64Array([ -0 ]);\r\n  var f32 = new Float32Array(f64.buffer);\r\n  var f8b = new Uint8Array(f64.buffer);\r\n  var fle = f8b[7] === 128;\r\n\r\n  module.float = module.f32 = {\r\n    get: function get_float(ptr) {\r\n      if (fle) {\r\n        f8b[0] = buffer[ptr    ];\r\n        f8b[1] = buffer[ptr + 1];\r\n        f8b[2] = buffer[ptr + 2];\r\n        f8b[3] = buffer[ptr + 3];\r\n      } else {\r\n        f8b[3] = buffer[ptr    ];\r\n        f8b[2] = buffer[ptr + 1];\r\n        f8b[1] = buffer[ptr + 2];\r\n        f8b[0] = buffer[ptr + 3];\r\n      }\r\n      return f32[0];\r\n    },\r\n    set: function set_float(ptr, value) {\r\n      f32[0] = value;\r\n      if (fle) {\r\n        buffer[ptr    ] = f8b[0];\r\n        buffer[ptr + 1] = f8b[1];\r\n        buffer[ptr + 2] = f8b[2];\r\n        buffer[ptr + 3] = f8b[3];\r\n      } else {\r\n        buffer[ptr    ] = f8b[3];\r\n        buffer[ptr + 1] = f8b[2];\r\n        buffer[ptr + 2] = f8b[1];\r\n        buffer[ptr + 3] = f8b[0];\r\n      }\r\n    }\r\n  };\r\n\r\n  module.double = module.f64 = {\r\n    get: function get_double(ptr) {\r\n      if (fle) {\r\n        f8b[0] = buffer[ptr    ];\r\n        f8b[1] = buffer[ptr + 1];\r\n        f8b[2] = buffer[ptr + 2];\r\n        f8b[3] = buffer[ptr + 3];\r\n        f8b[4] = buffer[ptr + 4];\r\n        f8b[5] = buffer[ptr + 5];\r\n        f8b[6] = buffer[ptr + 6];\r\n        f8b[7] = buffer[ptr + 7];\r\n      } else {\r\n        f8b[7] = buffer[ptr    ];\r\n        f8b[6] = buffer[ptr + 1];\r\n        f8b[5] = buffer[ptr + 2];\r\n        f8b[4] = buffer[ptr + 3];\r\n        f8b[3] = buffer[ptr + 4];\r\n        f8b[2] = buffer[ptr + 5];\r\n        f8b[1] = buffer[ptr + 6];\r\n        f8b[0] = buffer[ptr + 7];\r\n      }\r\n      return f64[0];\r\n    },\r\n    set: function set_double(ptr, value) {\r\n      f64[0] = value;\r\n      if (fle) {\r\n        buffer[ptr    ] = f8b[0];\r\n        buffer[ptr + 1] = f8b[1];\r\n        buffer[ptr + 2] = f8b[2];\r\n        buffer[ptr + 3] = f8b[3];\r\n        buffer[ptr + 4] = f8b[4];\r\n        buffer[ptr + 5] = f8b[5];\r\n        buffer[ptr + 6] = f8b[6];\r\n        buffer[ptr + 7] = f8b[7];\r\n      } else {\r\n        buffer[ptr    ] = f8b[7];\r\n        buffer[ptr + 1] = f8b[6];\r\n        buffer[ptr + 2] = f8b[5];\r\n        buffer[ptr + 3] = f8b[4];\r\n        buffer[ptr + 4] = f8b[3];\r\n        buffer[ptr + 5] = f8b[2];\r\n        buffer[ptr + 6] = f8b[1];\r\n        buffer[ptr + 7] = f8b[0];\r\n      }\r\n    }\r\n  };\r\n\r\n  module.array = {\r\n    get: function(ptr) {\r\n      var capacity = module.int.get(ptr);\r\n      var length = module.int.get(ptr + 4);\r\n      return {\r\n        capacity: capacity,\r\n        length: length,\r\n        base: ptr + arrayHeaderSize\r\n      };\r\n    },\r\n    create: function(length, elementByteSize) {\r\n      var ptr = (module.exports.malloc || imports.env.malloc)(arrayHeaderSize + length * elementByteSize);\r\n      module.int.set(ptr, length); // capacity\r\n      module.int.set(ptr + 4, length); // length\r\n      return {\r\n        ptr: ptr,\r\n        base: ptr + arrayHeaderSize\r\n      };\r\n    }\r\n  };\r\n\r\n  module.string = {\r\n    get: function(ptr) {\r\n      var capacity = module.int.get(ptr);\r\n      var length = module.int.get(ptr + 4);\r\n      var chars = new Array(length);\r\n      for (var i = 0, base = arrayHeaderSize + ptr; i < length; ++i)\r\n        chars[i] = module.ushort.get(base + (i << 1));\r\n      return String.fromCharCode.apply(String, chars); // TODO: chunking\r\n    },\r\n    create: function(value) {\r\n      var ptr = (module.exports.malloc || imports.env.malloc)(arrayHeaderSize + (value.length << 1));\r\n      module.int.set(ptr, value.length); // capacity\r\n      module.int.set(ptr + 4, value.length); // length\r\n      for (var i = 0, base = arrayHeaderSize + ptr; i < value.length; ++i)\r\n        module.ushort.set(base + (i << 1), value.charCodeAt(i));\r\n      return ptr;\r\n    }\r\n  };\r\n\r\n  function onGrowMemory() {\r\n    buffer = module.buffer = new Uint8Array(module.memory.buffer);\r\n  }\r\n\r\n  imports.onGrowMemory = onGrowMemory;\r\n\r\n  return (typeof file === \"string\"\r\n    ? (typeof fetch === \"function\" && fetch || fetch_node)(file)\r\n      .then(function(result) { return result.arrayBuffer(); })\r\n      .then(function(buffer) { return WebAssembly.instantiate(buffer, imports); })\r\n    : WebAssembly.instantiate(file, imports)\r\n  )\r\n  .then(function(result) {\r\n    module.exports = result.instance.exports;\r\n    if (module.exports.memory)\r\n      module.memory = module.exports.memory;\r\n    onGrowMemory();\r\n    return module;\r\n  });\r\n}\r\n\r\nvar fs;\r\nfunction fetch_node(file) {\r\n  return new Promise(function(resolve, reject) {\r\n    (fs || (fs = eval(\"equire\".replace(/^/, \"r\"))(\"fs\")))\r\n    .readFile(file, function(err, data) {\r\n      return err\r\n        ? reject(err)\r\n        : resolve({ arrayBuffer: function() { return data; } });\r\n    })\r\n  });\r\n}\r\n"]}